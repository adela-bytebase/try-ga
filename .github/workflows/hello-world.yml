name: Hello World Action
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      name:
        description: 'Who to greet'
        required: true
        default: 'World'

jobs:
  hello-world:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run custom hello world action
        uses: ./.github/actions/hello-world
        id: hello
        with:
          name: ${{ github.event.pull_request.user.login || github.event.inputs.name || 'World' }}

      - name: Show output time
        run: echo "Action was run at ${{ steps.hello.outputs.time }}"

      - name: Login Bytebase
        id: bytebase-login
        uses: bytebase/login-action@0.02
        with:
          bytebase-url: ${{ secrets.BYTEBASE_URL }}
          service-key: ${{ secrets.BYTEBASE_KEY }}
          service-secret: ${{ secrets.BYTEBASE_SECRET }}

      - name: List projects
        run: |
          curl "${{ steps.bytebase-login.outputs.api_url }}/projects" \
            -H 'Authorization: Bearer ${{ steps.bytebase-login.outputs.token }}' \
            -H 'Content-Type: application/json; charset=utf-8'


      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          TIME: ${{ steps.hello.outputs.time }}
          BYTEBASE_PROJECTS: ${{ steps.bytebase-login.outputs.projects }}
        with:
          script: |
            // Debug information
            const repository = process.env.GITHUB_REPOSITORY;
            console.log('Full repository name:', repository);
            console.log('Event name:', context.eventName);
            console.log('PR number:', context.payload.pull_request.number);

            console.log('Bytebase projects:', process.env.BYTEBASE_PROJECTS);
            
            const [owner, repo] = repository.split('/');
            
            try {
              await github.rest.issues.createComment({
                owner: owner,
                repo: repo,
                issue_number: context.payload.pull_request.number,
                body: `Hello @${context.payload.pull_request.user.login}! Action was run at ${process.env.TIME}`
              });
            } catch (error) {
              console.log('Full error:', {
                message: error.message,
                status: error.status,
                url: error.response?.url,
                data: error.response?.data
              });
              core.setFailed(error.message);
            }